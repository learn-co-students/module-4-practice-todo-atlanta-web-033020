{"ast":null,"code":"var _jsxFileName = \"/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js\";\nimport React from 'react';\nimport CategoryButton from './CategoryButton';\n\nclass CategoriesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.categoriesMap = categories => categories.map(category => {\n      return /*#__PURE__*/React.createElement(CategoryButton, {\n        key: category,\n        category: category,\n        setSelectedCategory: this.setSelectedCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 12\n        }\n      });\n    });\n  }\n\n  // setSelectedCategory = category => {\n  //   if \n  // }\n  render() {\n    return this.categoriesMap(this.props.categories);\n  }\n\n}\n\nexport default CategoriesContainer;","map":{"version":3,"sources":["/Users/brandonbrown/Documents/Flatiron/code/Module 4/module-4-practice-todo-atlanta-web-033020/src/CategoriesContainer.js"],"names":["React","CategoryButton","CategoriesContainer","Component","categoriesMap","categories","map","category","setSelectedCategory","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAkD;AAAA;AAAA;;AAAA,SAEhDC,aAFgD,GAEhCC,UAAU,IAAIA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IAAI;AACvD,0BAAO,oBAAC,cAAD;AACL,QAAA,GAAG,EAAEA,QADA;AAEL,QAAA,QAAQ,EAAEA,QAFL;AAGL,QAAA,mBAAmB,EAAE,KAAKC,mBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKD,KAN6B,CAFkB;AAAA;;AAUhD;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKL,aAAL,CAAmB,KAAKM,KAAL,CAAWL,UAA9B,CAAP;AACD;;AAhB+C;;AAmBlD,eAAeH,mBAAf","sourcesContent":["import React from 'react';\nimport CategoryButton from './CategoryButton';\n\nclass CategoriesContainer extends React.Component {\n\n  categoriesMap = categories => categories.map(category => {\n    return <CategoryButton\n      key={category}\n      category={category}\n      setSelectedCategory={this.setSelectedCategory}\n    />\n  });\n\n  // setSelectedCategory = category => {\n  //   if \n  // }\n\n  render() {\n    return this.categoriesMap(this.props.categories)\n  }\n}\n\nexport default CategoriesContainer;"]},"metadata":{},"sourceType":"module"}